# DNA Alignment with BWA MEM
# Take DNA fastq data files to aligned bams with qc data
{% from 'modules/dna_alignment/bwa_mem_samtools.jst' import bwa_mem_samtools_chunked with context %}
{% from 'modules/dna_alignment/bwa_mem2_samtools.jst' import bwa_mem2_samtools_chunked with context %}
{% from 'modules/dna_alignment/pb_fq2bam.jst' import fq2bam with context %}
{% from 'modules/dna_alignment/bwa_mem_gatk_picard.jst' import bwa_mem_gatk_picard_chunked with context %}
{% from 'modules/dna_alignment/bwa_mem_samblaster_sambamba.jst' import bwa_mem_blaster_bamba with context %}
{% from 'modules/dna_alignment/bowtie2_samtools.jst' import bowtie2_samtools_chunked with context %}
{% from 'modules/dna_alignment/fgbio_umi.jst' import fgbio_bwa_mem with context %}
{% from 'modules/dna_alignment/gatk_baserecalibration.jst' import baserecalibration, nobaserecalibration with context %}
{% from 'utilities/bam_to_cram.jst' import bam_to_cram with context %}
{% from 'utilities/read_group_line.jst' import read_group_line %}
{% from 'modules/qc/main.jst' import bam_qc with context %}


{% macro dna_alignment(samples) %}
  {% set alignment_style = dnaAlignmentStyle|default('tgen')|lower %}
  {# Not configurable by LIMS #}
  {% set reads_per_chunk = reads_per_chunk|default(40000000) %}

  {% for sample in samples.values() if sample.gltype == 'chip' %}
    {% set platform = (sample.read_groups.values()|first).rgpm|default('') %}
    {% if platform|lower in ['hiseq4000', 'novaseq6000'] %}
      {% set opt_dup_distance = 2500 %}
    {% else %}
      {% set opt_dup_distance = 100 %}
    {% endif %}

    {{- bowtie2_samtools_chunked(sample, reads_per_chunk, opt_dup_distance) }}

    {{- bam_to_cram(sample, aligner='bowtie2') }}

    {{- bam_qc(sample, aligner='bowtie2') }}

  {% endfor %}

  {% for sample in samples.values() if sample.gltype in ['genome', 'exome'] %}

    {% set platform = (sample.read_groups.values()|first).rgpm|default('') %}
    {% if platform|lower in ['hiseq4000', 'novaseq6000'] %}
      {% set opt_dup_distance = 2500 %}
    {% else %}
      {% set opt_dup_distance = 100 %}
    {% endif %}

    {# PCRfree will not have any pcr cycles #}
    {% if sample.pcrCycles is defined and sample.pcrCycles == 0 %}
      {{- bwa_mem2_samtools_chunked(sample, reads_per_chunk, opt_dup_distance) }}
    {% elif sample.umiType != "" | default(false) %}
      {{- fgbio_bwa_mem(sample) }}
    {% else %}
      {% if alignment_style == 'tgen' %}
        {{- bwa_mem_samtools_chunked(sample, reads_per_chunk, opt_dup_distance) }}
      {% elif alignment_style == 'broad'  %}
        {{- bwa_mem_gatk_picard_chunked(sample, reads_per_chunk, opt_dup_distance) }}
      {% elif alignment_style == 'ashion' %}
        {{- bwa_mem_blaster_bamba(sample) }}
      {% else %}
        {{ raise('Unknown dnaAlignmentStyle: {}'.format(dnaAlignmentStyle)) }}
      {% endif %}
    {% endif %}

    {% if sample.gltype == 'genome' %}
      {# shorten to tasks.Genome_alignment_base_recalibration_gatk|default(false) #}
      {% if tasks.Genome_alignment_base_recalibration_gatk is defined and tasks.Genome_alignment_base_recalibration_gatk %}
        {{- baserecalibration(sample, aligner='bwa') }}
      {% else %}
        {{- nobaserecalibration(sample, aligner='bwa') }}
      {% endif %}
    {% elif sample.gltype == 'exome' %}
      {% if tasks.Exome_alignment_base_recalibration_gatk is defined and tasks.Exome_alignment_base_recalibration_gatk %}
        {{- baserecalibration(sample, aligner='bwa') }}
      {% else %}
        {{- nobaserecalibration(sample, aligner='bwa') }}
      {% endif %}
    {% endif %}

    {{- bam_to_cram(sample, aligner='bwa') }}

    {{- bam_qc(sample, aligner='bwa') }}

  {% endfor %}

{% endmacro %}
